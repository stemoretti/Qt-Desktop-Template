name: Windows

on:
  push:
    branches:
      - master
    tags:
      - 'v*.*.*'

jobs:
  windows:
    runs-on: windows-latest
    strategy:
      matrix:
        arch: [32, 64]
    steps:
    - uses: actions/checkout@v2
    - name: Detect release tag
      shell: bash
      run: |
        TAG=${GITHUB_REF#refs/*/}
        if [[ "$TAG" == v*.*.* ]]; then
          VERSION=${TAG#v}
        else
          VERSION=$(git log -1 --format=%cd --date=format:%Y%m%d)_$(git rev-parse --short HEAD)
        fi
        echo "VERSION=$VERSION" >> $GITHUB_ENV
    - name: Install Qt
      shell: bash
      env:
        QTDIR: ${{ runner.workspace }}/Qt
        QTVER: 5.15.1
      run: |
        pip install aqtinstall
        aqt install --outputdir $QTDIR $QTVER windows desktop win${{ matrix.arch }}_mingw81
        aqt tool -O $QTDIR windows tools_mingw 8.1.0-1-202004170606 qt.tools.win${{ matrix.arch }}_mingw810
        echo "$QTDIR/$QTVER/mingw81_${{ matrix.arch }}/bin" >> $GITHUB_PATH
        echo "$QTDIR/Tools/mingw810_${{ matrix.arch }}/bin" >> $GITHUB_PATH
        echo "Qt5_DIR=$QTDIR/$QTVER/mingw81_${{ matrix.arch }}" >> $GITHUB_ENV
    - name: Build
      shell: bash
      run: |
        mkdir build
        cd build
        cmake -G "MinGW Makefiles" -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX="" ..
        make -j2
        make install DESTDIR=appdir
    - name: Create package and installer
      shell: bash
      working-directory: 'build'
      env:
        PACKAGE_FILENAME: Qt_Desktop_Template-${{ env.VERSION }}-win${{ matrix.arch }}
      run: |
        windeployqt --compiler-runtime appdir/qt-desktop-template.exe
        7z a -tzip ${GITHUB_WORKSPACE}/$PACKAGE_FILENAME.zip ./appdir/*
        iscc \
          //DMyAppVersion="$VERSION" \
          //DMyAppDir="appdir" \
          //O"$GITHUB_WORKSPACE" \
          //F"$PACKAGE_FILENAME" \
          qt-desktop-template.iss
        echo "PACKAGE_FILENAME=$PACKAGE_FILENAME" >> $GITHUB_ENV
    - name: Upload artifacts
      uses: actions/upload-artifact@v2
      with:
        name: Windows-${{ matrix.arch }}
        path: |
          ${{ env.PACKAGE_FILENAME }}.zip
          ${{ env.PACKAGE_FILENAME }}.exe
    - name: Release
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        prerelease: ${{ contains(github.ref, '-prerelease') }}
        files: |
          ${{ env.PACKAGE_FILENAME }}.zip
          ${{ env.PACKAGE_FILENAME }}.exe
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
