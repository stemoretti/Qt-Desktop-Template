name: AppImage

on:
  push:
    branches:
      - master
    tags:
      - 'v*.*.*'

jobs:
  appimage:
    runs-on: ubuntu-16.04
    steps:
    - uses: actions/checkout@v2
    - name: Detect release tag
      run: |
        TAG=${GITHUB_REF#refs/*/}
        if [[ "$TAG" == v*.*.* ]]; then
          VERSION=${TAG#v}
        else
          VERSION=$(git log -1 --format=%cd --date=format:%Y%m%d)_$(git rev-parse --short HEAD)
        fi
        echo "VERSION=$VERSION" >> $GITHUB_ENV
    - name: Install Qt
      uses: jurplel/install-qt-action@v2
      with:
        version: 5.12.9
        host: linux
        target: desktop
    - name: Install linuxdeploy
      uses: miurahr/install-linuxdeploy-action@v1.2.0
      with:
        plugins: qt appimage
    - name: Build
      run: |
        mkdir build
        cd build
        cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/usr ..
        make -j2
        make install DESTDIR=appdir
    - name: Create AppImage
      working-directory: 'build'
      env:
        LD_LIBRARY_PATH: ${{ env.Qt5_DIR }}/lib
        ICON: -i appdir/usr/share/icons/hicolor/256x256/apps/qt-desktop-template.png
        DESKTOP: -d appdir/usr/share/applications/qt-desktop-template.desktop
      run: |
        linuxdeploy-x86_64.AppImage -p qt -o appimage --appdir=appdir ${ICON} ${DESKTOP}
    - name: Upload artifact
      uses: actions/upload-artifact@v2
      with:
        name: AppImage
        path: build/*.AppImage
    - name: Release
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        prerelease: ${{ contains(github.ref, '-prerelease') }}
        files: |
          build/Qt_Desktop_Template-${{ env.VERSION }}-x86_64.AppImage
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
