name: MacOS

on:
  push:
    branches:
      - master
    tags:
      - 'v*.*.*'
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: macos-latest
    env:
      QTVER: 6.5.2

    steps:
    - uses: actions/checkout@v3

    - name: Detect release tag
      run: |
        TAG=${GITHUB_REF#refs/*/}
        if [[ "$TAG" == v*.*.* ]]; then
          VERSION=${TAG#v}
        else
          VERSION=$(git log -1 --format=%cd --date=format:%Y%m%d)_$(git rev-parse --short HEAD)
        fi
        echo "VERSION=$VERSION" >> $GITHUB_ENV

    - name: Cache Qt
      id: cache-qt
      uses: actions/cache@v3
      with:
        path: ${{ runner.workspace }}/Qt
        key: ${{ runner.os }}-cache-qt-${{ env.QTVER }}

    - name: Install dependencies
      env:
        QTDIR: ${{ runner.workspace }}/Qt
      run: |
        brew install cmake ninja
        if [ "${{ steps.cache-qt.outputs.cache-hit }}" != "true" ]; then
          pip3 install aqtinstall
          aqt install-qt -O $QTDIR mac desktop $QTVER clang_64
        fi
        echo "$QTDIR/$QTVER/macos/bin" >> $GITHUB_PATH
        echo "QTROOT=$QTDIR/$QTVER/macos" >> $GITHUB_ENV

    - name: Build
      env:
        MACOSX_DEPLOYMENT_TARGET: 11
      run: |
        cmake -B build -G "Ninja" -DCMAKE_BUILD_TYPE=Release
        cmake --build build

    - name: Create dmg bundle and Zip file
      working-directory: 'build'
      env:
        PACKAGE: Qt_Desktop_Template-${{ env.VERSION }}
        APP: "Qt Desktop Template.app"
      run: |
        mkdir -p "$APP/Contents/translations"
        cp $QTROOT/translations/qt_*.qm "$APP/Contents/translations"
        cp $QTROOT/translations/qtbase_*.qm "$APP/Contents/translations"
        mkdir -p "$APP/Contents/Resources/translations"
        cp translations/*.qm "$APP/Contents/Resources/translations"
        mkdir -p "$APP/Contents/Resources/icons"
        cp ../packaging/qt-desktop-template.svg "$APP/Contents/Resources/icons"
        macdeployqt "$APP" -verbose=3 -dmg
        ditto -c -k --sequesterRsrc --keepParent "$APP" "${PACKAGE}-macOS.zip"
        mv *.dmg "$PACKAGE.dmg"
        echo "PACKAGE=$PACKAGE" >> $GITHUB_ENV

    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: MacOS-Bundle
        path: |
          build/${{ env.PACKAGE }}-macOS.zip
          build/${{ env.PACKAGE }}.dmg
